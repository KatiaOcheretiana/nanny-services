{"version":3,"file":"static/js/802.9b09eef1.chunk.js","mappings":"iRAGO,MAAMA,EAAmBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4EAO7BC,EAAQJ,EAAAA,GAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mHAQhBI,EAAWP,EAAAA,GAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4PAIXM,GAAUA,EAAMC,MAAMC,MAClCC,EAAAA,GAAYC,OAUVC,EAAcd,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kNAMfS,EAAAA,GAAYC,OAOrBG,EAAShB,EAAAA,GAAOC,IAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,uLAKpBM,GAAWA,EAAMS,SAAW,QAAU,0B,uBCpC3C,MAAMC,EAAUA,KACrB,MAAMC,GAAwBC,EAAAA,EAAAA,MACxBC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GAEzCC,EAAgBC,IACpBT,GAASU,EAAAA,EAAAA,GAAaD,IACtBH,GAAe,EAAM,EAGvB,OACEK,EAAAA,EAAAA,MAAChC,EAAgB,CAAAiC,SAAA,EACfC,EAAAA,EAAAA,KAAC7B,EAAK,CAAA4B,SAAC,aACPD,EAAAA,EAAAA,MAACxB,EAAQ,CAAC2B,QAASA,IAAMR,GAAgBD,GAAaO,SAAA,EACpDC,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,KACJW,EAAAA,EAAAA,KAAA,OAAKE,OAAO,KAAKC,MAAM,KAAIJ,UACzBC,EAAAA,EAAAA,KAAA,OAAKI,KAAMC,EAAAA,EAAS,qBAAsBC,KAAK,eAGlDd,IACCM,EAAAA,EAAAA,MAACjB,EAAW,CAAAkB,SAAA,EACVC,EAAAA,EAAAA,KAACjB,EAAM,CACLkB,QAASA,IAAMN,EAAa,UAC5BV,SAAqB,WAAXI,EAAoBU,SAC/B,YAGDC,EAAAA,EAAAA,KAACjB,EAAM,CACLkB,QAASA,IAAMN,EAAa,UAC5BV,SAAqB,WAAXI,EAAoBU,SAC/B,YAGDC,EAAAA,EAAAA,KAACjB,EAAM,CACLkB,QAASA,IAAMN,EAAa,iBAC5BV,SAAqB,kBAAXI,EAA2BU,SACtC,mBAGDC,EAAAA,EAAAA,KAACjB,EAAM,CACLkB,QAASA,IAAMN,EAAa,oBAC5BV,SAAqB,qBAAXI,EAA8BU,SACzC,sBAGDC,EAAAA,EAAAA,KAACjB,EAAM,CACLkB,QAASA,IAAMN,EAAa,WAC5BV,SAAqB,YAAXI,EAAqBU,SAChC,aAGDC,EAAAA,EAAAA,KAACjB,EAAM,CACLkB,QAASA,IAAMN,EAAa,YAC5BV,SAAqB,aAAXI,EAAsBU,SACjC,kBAKY,ECnCvB,EA1BgBQ,KACd,MAAMpB,GAAwBC,EAAAA,EAAAA,MAExBoB,GAAclB,EAAAA,EAAAA,IAAYmB,EAAAA,IAC1BC,GAAYpB,EAAAA,EAAAA,IAAYqB,EAAAA,IAM9B,OAJAC,EAAAA,EAAAA,YAAU,KACRzB,GAAS0B,EAAAA,EAAAA,KAAiB,GACzB,CAAC1B,KAGFW,EAAAA,EAAAA,MAACgB,EAAAA,EAAS,CAAAf,SAAA,CACPW,IAAaV,EAAAA,EAAAA,KAACe,EAAAA,EAAM,IACpBP,IACCV,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAjB,SAAA,EACEC,EAAAA,EAAAA,KAACd,EAAO,KACRc,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,KAAMV,QAGpBA,IAAgBE,IAChBV,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qDAEI,C","sources":["components/Filters/Filters.styled.ts","components/Filters/Filters.tsx","pages/Nannies/Nannies.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { globalColor } from \"../../styles/root\";\n\nexport const OptionsContainer = styled.div`\n  position: relative;\n  width: 226px;\n\n  margin-bottom: 35px;\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 129%;\n  color: #8a8a89;\n  margin-bottom: 8px;\n`;\n\nexport const Selector = styled.div`\n  border-radius: 14px;\n  padding: 16px 18px;\n  width: 100%;\n  background-color: ${(props) => props.theme.main};\n  color: ${globalColor.white};\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 111%;\n  cursor: pointer;\n\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const OptionsList = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  border-radius: 14px;\n  background-color: ${globalColor.white};\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  z-index: 10;\n\n  margin-top: 8px;\n`;\n\nexport const Option = styled.div<{ selected: boolean }>`\n  padding: 12px 18px;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 111%;\n  color: ${(props) => (props.selected ? \"black\" : \"rgba(17, 16, 28, 0.3)\")};\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f3f3f3;\n  }\n`;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppDispatch } from \"../../redux/store\";\nimport { selectFilter } from \"../../redux/filter/selectors\";\nimport { changeFilter } from \"../../redux/filter/filterSlice\";\nimport {\n  Option,\n  OptionsContainer,\n  OptionsList,\n  Selector,\n  Title,\n} from \"./Filters.styled\";\n\nimport sprite from \"../../images/sprite.svg\";\n\nexport const Filters = () => {\n  const dispatch: AppDispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const [showOptions, setShowOptions] = useState(false);\n\n  const handleChange = (value: string) => {\n    dispatch(changeFilter(value));\n    setShowOptions(false);\n  };\n\n  return (\n    <OptionsContainer>\n      <Title>Filters</Title>\n      <Selector onClick={() => setShowOptions(!showOptions)}>\n        <p>{filter}</p>\n        <svg height=\"20\" width=\"20\">\n          <use href={sprite + \"#icon-chevron-down\"} fill=\"white\" />\n        </svg>\n      </Selector>\n      {showOptions && (\n        <OptionsList>\n          <Option\n            onClick={() => handleChange(\"A to Z\")}\n            selected={filter === \"A to Z\"}\n          >\n            A to Z\n          </Option>\n          <Option\n            onClick={() => handleChange(\"Z to A\")}\n            selected={filter === \"Z to A\"}\n          >\n            Z to A\n          </Option>\n          <Option\n            onClick={() => handleChange(\"Less than 10$\")}\n            selected={filter === \"Less than 10$\"}\n          >\n            Less than 10$\n          </Option>\n          <Option\n            onClick={() => handleChange(\"Greater than 10$\")}\n            selected={filter === \"Greater than 10$\"}\n          >\n            Greater than 10$\n          </Option>\n          <Option\n            onClick={() => handleChange(\"Popular\")}\n            selected={filter === \"Popular\"}\n          >\n            Popular\n          </Option>\n          <Option\n            onClick={() => handleChange(\"Show all\")}\n            selected={filter === \"Show all\"}\n          >\n            Show all\n          </Option>\n        </OptionsList>\n      )}\n    </OptionsContainer>\n  );\n};\n","import { NannieList } from \"../../components/NannieList/NannieList\";\nimport { Container } from \"../../styles/GlobalStyle\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getNanniesData } from \"../../redux/nannies/operations\";\nimport {\n  selectIsLoading,\n  selectNanniesByFilter,\n} from \"../../redux/nannies/selectors\";\nimport { AppDispatch } from \"../../redux/store\";\nimport { Filters } from \"../../components/Filters/Filters\";\n\nconst Nannies = () => {\n  const dispatch: AppDispatch = useDispatch();\n\n  const nanniesData = useSelector(selectNanniesByFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getNanniesData());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {nanniesData && (\n        <>\n          <Filters />\n          <NannieList data={nanniesData} />\n        </>\n      )}\n      {!nanniesData && !isLoading && (\n        <h3>Something went wrong, try to reload the page..</h3>\n      )}\n    </Container>\n  );\n};\n\nexport default Nannies;\n"],"names":["OptionsContainer","styled","div","_templateObject","_taggedTemplateLiteral","Title","p","_templateObject2","Selector","_templateObject3","props","theme","main","globalColor","white","OptionsList","_templateObject4","Option","_templateObject5","selected","Filters","dispatch","useDispatch","filter","useSelector","selectFilter","showOptions","setShowOptions","useState","handleChange","value","changeFilter","_jsxs","children","_jsx","onClick","height","width","href","sprite","fill","Nannies","nanniesData","selectNanniesByFilter","isLoading","selectIsLoading","useEffect","getNanniesData","Container","Loader","_Fragment","NannieList","data"],"sourceRoot":""}